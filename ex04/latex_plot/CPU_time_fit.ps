%!PS-Adobe-2.0
%%Creator: dvips(k) 2020.1 Copyright 2020 Radical Eye Software
%%Title: CPU_time_fit.dvi
%%CreationDate: Tue Oct 27 18:13:59 2020
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 252
%%DocumentFonts: CMR12 CMMI12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o CPU_time_fit.ps CPU_time_fit.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2020.10.27:1913
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C14270F332961AA33B137253AB3
22365A3235B9DD96A135DE24B41E82E978347F50C0F55B1710CA52C667FF8F76
A798349186439FD265C90CC9FF86C91EE7F25F80B39F4A584B9322EC633C33C8
E482368140F2A7E3F8E4B2DA0E2145BC7023DCB5AF1919C4F3EE314D0F09A5DC
24D41FDD14AF9A20C9B2477AB7471781854FD7B83C6F102B67C271C33EDB0C54
4D1DCA57AE78AC688EE28C31D597BC0184963FA54A893B3A0DFD699A8218937C
FC81E2FEDC87AB035DE83FB56440DF99E6DC49E4D01F9286E11085D68EB2DA10
2B6DF94E62408E24154BAAC66B2B249C69535D0754B270FA7C180D3CE759114D
5D58C58CADC13F0055EBA91893597A866F289B75B6C623DDC0E21F8425B51D49
C48DAB045F59616134880BD8BFD50CF2EBA94A5F932FCE2CD96CA703FFC8167C
703D76BE9754A8D2E421E2A0CCEB2AFA2FDD93834089E0C8B29B4C3AED6F03D9
17F0C8BB0CB3120C3CD743789E435A43F17174168F3236BA41889C5669C3216F
7ACA6101CFA6D65D0FA0FCCCC6146E7B483AA7CD13A91E54AC62A383DBF1AE8B
44DEDD7C92FA3787EC523534848B9EE545585845B09D855C3A01F713C1BF081E
B27E2A0F685D86F7A7BB423D1A7C21531E2C5151279BFF1877A8043A2240FCCF
A6434B1639A763B4DEEE7EFB102E16A88E8FC0194CE3B471CC2C4DCD7EE8DA67
D9BFF03168F9E6EF16312BB687AA3EAF0245885C5CEFC7138A7307297BF2B08A
80874CF0D889281F4761B0DA057892630923CD601E96E722DB1BE432987A61FC
0E1DF9C6433A30B98C5233D2B5EEC1C70F6F28FF3898A33D05EC001E45AE4B4D
F4FFA56A85E06839D169AD9ED3FB68C544D8790143B7C8FFDCBC8B95F1B879C1
0D8CE03F862BB01C30566C90DF0990ACDAAFB55D94C0C84B04C87E046D425D2C
67D68D0A054F8A3F6FF858E2218C80C58E34DF3EA0718B7C8E2D6511B0590926
35A418CC45E254F6EE96724B8CEA4F4A9959E04319C33160B2617450B1B61F32
572C4946A32BADCDAFD854F19FCBAE6C1BB500C839DC25CB07FD277A265340F2
9AC54033E2AEA70CE57180265F10B9458B6B78BBBD27C7EA54BDFAFB92C64EC8
2EC805FC436052C08AA7A1C5ED0CC9861ADD632FE0122374A4D01C79A59BD0EC
704EDB0E22DD7A119778233CF654247714256AEADF217F5EB082D3499A91BC81
1007705EE208B2F3A011B6574E756337BA0CDA14ECCF958C3EB8EE33FD63CAA1
5C65664CC1F2B432CDEBD87CA715056F55B45E2976D537A5F94CE3151D873DC1
745A32A56D84287A5BAD11C07871B334CA8837FFA81B261AC2D66665A3E4D438
F854AAF1C609FFE534E81E0C7E5549D27DD7A0C41F57701A53F3C84733BCD82D
2B357C576397E367D97B71C26E77ECFEE099B33FC49DBD8C5A52BB0DC506F0DA
1099849A5861CEB1C71EB191AE949CD7F2A8D15E3BA7EBEEE2BD074588988CCC
60ADCA1E172146387B98F3D0DA20D885B7491CB59B5E3BB960BD560BE498E3EB
2934CFCA9DD01AEE1B0BDC3701A23186267BCB761EEF6D0E4280D802F02D4DCA
268DA0DD35E302913749357A2965F2BEF08F52C6E8060A36C673A1579F97D8F4
591C978D8CA997244D395411A2C4B19EC33CABCF4DE44BF838587C0B177A74AA
8339E8C2F1A69B8307D284A95A95F5D1FD39F342A9B62978574DDEAEB6506208
A8128A39CB62AFB340E50FB8171449B134EE8298B54A8C2B5E4020E71D6734A6
310FC562CF8BFFFA9709814A4A089771B226BB8C4A10385294FF753265374383
639D1C117338330F8EFF421560B0B7379C6FC1A12642BD0BDCABD73A0754CE89
228168E36427BBCF27D4965E0413B82E618521AA4E019BE83FD515952FCEB749
42EDB396C1F26C50B74EDCF84BF08E80BB5A8AC5ABE8183B92A5E9ED1645677F
E8E780C697B8CE9B61C87DB70A91F24A89AECC81F2666400D65758CE1CDF39A4
44B515A89CE5230343FDE49B246441C6040601BC72660A67B7F9B5C8F91F8015
847FFBCBB50B449C48D9387DFCFCBBD3B32767591633A80A9376C858E5FC33AC
88D3D7571F145907DB83E754F020A9C0D88206D4459F42B6549897A8811E0A45
EB0AB31774687095FDADDBE13D0DD0A975784B59FFA45DD80333B9309320CF23
E6776D4A0B0C05A8F07932B4CE1BBDF4292581FDA38C5521FE5ECF45AF73F16A
3516F95B439F955CD00AC8C595E35F7A78A17056159EC81AD6B87E4FC2335A04
7BCB31E72CC11B35D443815D12BDD3D9154118EE66286D8BE271D65F3C0221FC
74808F801C3CD3518BF1BAD3BD7D967CC7D171B7B2869B872D9695D7DA105D7F
21FA99629710EEA2D3CBE140C04EA6604915759043CE0E4642F1DE1663AE760A
44A1D30822BAC359BA290CE013A56680C1BE7A817D70DFB3C5E1E3ABC2A45219
42BD8489C3FECF9E5C421689488B3F57A72EA365DB8FB306528019CE9F593DA3
B5862F51CBEAEDCD6CB2346A1BDE54FAA3CCC0A38BA590F4E614A59ACD4DAFFF
8E0C34E4D6E68A0035B493B7561E4DC8752AB5BE8A6B7DFD5B67CB78C03BBF7C
95D961D58522C8ED2A194F3F859039355B7257094C6F5396B6281F92AD24F1B5
4C6B98C56CF513F43B037FBE9D537401E740E4F9B1D799FA6B484D9D65DD6BB8
3FF037F079338606F9C67F2B0DC00BA7F529B16BDF8050F901A5654F36DD284B
9B7AABB7F4BA7A475B2EEAF7780EB452F297
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 67 /C put
dup 77 /M put
dup 80 /P put
dup 85 /U put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD6DBD2817CD57D7CCC2FAE2B14257C7214981A0678BB213832B04A68AB3631
8B23CA966781ABFCBD46714EEDB6F54568E2E17613658D4F62AAE1B2B4732FA8
F3F9BB87D30D771D591B8E7F59EC319B3C80C7DDB03B26C4A34300BFECE03FD2
8732CB57F2E95555F4EBC6F97D187D7F7BF406499A2B12B953D0AE1984D78EF2
399E862A24DD788C8C23E5A620F4FD4BDD641715A50B543CA1C4DBC2B2F72F6D
19FA0C4EFE4E73FE9669F35AADCBCF96948C6A0F57223555F70B4116FEBF8041
0BD48817C5E2C69174395C9FAA22504E4A4F014CEF38F16D931E1077F8788685
8AF74DC1D5C7DDBBA0E4974CA7890B785D302C38EF46098F42BE6DC19566B7E1
3900E1760FD9347D3B597E451CBA9F7D4EDC10BA86DE1D6874AF13BA18C6C4A9
F82C1CA00527FA8EAC96B700020F1301D630F1975A5E1772F4FBEE308CEF24F2
DC425675DDC656AA8024301ADE2ED4762DE40CFF074FEB45E9425DBEF5651161
7468DEAA70536CAEAF66F7ADDB5BC8C2D8E357868182B1B3FC2115F19613F7D7
E58B91595312AF39E5BFE1E26EC652077558191135C099164D67BD58D4BB3CD2
0DDE9318A7BB064CD5905BF1FDADD499C9D6219C440D7363C2B8A42E7826B351
A8EF830E5685C4675D758BED5828ABE1252C1D066E165BF3303DC88213BDFC6D
AE9CD3290572D512521227D3F343B590E9DAAC4D99A15E2E88B76AC2AAB79C1A
2CE870A015581B2315B4FF9C59045CC2022B348087A2CF52EDD7E8586D68ABFE
8F9D1B93982951D1311210BCE90A27E22F0E0A134AD4C6A8C9276C4CE2EDECC6
61FD88BE25DD48A3E3AFE24090D278D7151D5949AEC22F40E5FF2D13E47F6C33
3B7230C3A7A73498DFE23C3AE7A1D37E9F5247BE4DA538B31952E14DD1A7C202
D20C1AF479092CE628FDE52A00F4E904B9A545ABCC010BA9467309C930F46C48
2383AB8FB37161A9E922B46815864C0D079A589207D277137335325FFA2403D5
AE7427821FAA51C391ED6D3D5913B092B3D0468505C533F464285EC1960367D0
FC0009D140156C025B897C61EE5F514F828BCC765914C80F76AC0F3066CB80D1
56CE25B3C8634EEDF2E6541FE07E7E09A0D8199EC091B256FDF06E8EBC016257
E8F43E30AA50A50546888E551C74751D9E5F33BF1DACCA2EDD23A64C04BF4E1B
E3F89CAC674A0D6C8B9D05DB1944D648BC3EAF6649E8FC9AAF2E2C1DECF85CD3
10D068CCD0D596A08C041F9A141DA08732A7D750AAA22C7028F0E2C551B6E8A6
FA34BA5F693EC89E4EF5E8AF3616596D1B249FDA70C873327CFBB8FDA78AF2DC
48BD8BA01A6D09D61D7ACCDFF215B9F6F44669D4944B134A516F6B2757468834
4743F8945B7685E160E6120365206F19A8CBA1536D0901CE2C3D0ADFA76D793D
7A5FD2C568A852F66261C8B57121B453C48F8B3ED3B8BCF64FB2A1A2E2B6AA3E
35D687E5050CE040ECCAC8CA4BC5002FCFD2F695A6F523E0D4ACBE2DF9FBD02B
9672D43BA2BFC085F0D2A38A527D542337300D11A00FB5895911591D20D2F24A
D159E22937496CD4B1FFAB50595C2DEF0FA5C6831EC98E3DFA0FA13767777D1D
B7A106D63438EA81A2A2E80C9307E1C17D5493D4BBE40DF2F03232F7A1ED9BEA
C719B870989A5157B7BF0FF9A1F381C85ED755AB81F20720E2F91D3996F6C6D3
E4E9B163E7DF2667584F82B5C57079F09C8A64DFA57258B78CD68C2E58E132BD
8E1828149EA7FE60F1A815E8679D8590ED0960E92B5C85D1A1CDFCB15D437031
738AA6AA40CC05A2F968025DA484F0FC44947611D5D122C9886A728D5E899E41
B454D10963D8E6315DC9C75259D9841B2EFA918D021B6124ADDB2CE2B92A1A04
AA2CFF4D722F5637769CE4F5A66494ADD7CD1C85673DEE07D164E25A3F21E88B
D2A58A3DF7318D5663E64F42D617F1D4A8D00F242188B837E6823856E3BB3D43
1F3DBD90EFAED3688B9116D23CF760FDCC6CAC2CF2DAB17C3296A7A5F0C52AC7
76C940A67E626B7320B6173B3887A602FB5A8760DF37AA9110DDC89D11189594
3C6CE54EF6D8EC00E79F1245FA404B3ACEDBB6B007C0E8E8D6E42EF40A6851AD
33CA66704753F922D51D8822C398352425F96C41DF4D32D8BFA1D07D90C42408
0665945ED6A76BF2291CAD840DEBD7DD64CBCEF531122901BB46DD52879E04B7
98C96143F10122D502EBEAC6279DC3AF05BCDC0A7EC3921A63BD700C5CA39F30
4415D02FA831B6EE4B20AE0A307A533BE7E03FD8E6948775A35B4B8DC478CF7A
9C897B37857F7DEE1D680CE5529C5093D0C4AB78C03867D9A66984FCC9AC253C
9793D27DF5B96E7083F547DFB46A8D491FBC0AD33B1A4F74FD562177DCCC02AA
8AE952119A5F1B850EAC6F0E0D0AA9240983C1B5F899B3D73D6C75B52F1390E7
B01CE1F73E8945EF4F72F7657308ED465B0556C472E19581C947A77235F0572F
40745FAA88BD8D4EFC846965DDD1E23C5C0A988AA3C82E6409D3EEBDC7D80BE2
88EF00BD997F1D99847B5AB385A9F32F7379616607192296FA91C5D6B66298AD
6D7CBB1ACCBBFDCAF7FB41B1C1CA3883DF519BE872A12CBBB9849773BA7AA52C
045B945E4FE5D8160ACD56D3988495874EA9D60FD27D2C8F827C60756F3F2A33
EC48A07532B7A7B1F5C54EF9624704E9A84A5B50CEE0DD151BF04CAD65D2DC56
408A546BC974A8C4F2E2585B6E8522FE4C3F79D2ACD4F3E43F23AC6346A81410
13647112E76158A76E347AC4146D7C0305C2FCF928F9C6831BB2A49FF98FF1A1
F54C85BE06C2B2930018AA2B66DAEE23EE01A19AED0E2ADBF773ACEE129F84FF
B8F5E59A2226EBD3CA656F5D1C2E6EE93674A66F291D10E75369821AD41FDA5B
121BADF4C90354A6269BED3EB3F925CEC4B9E418CBDEF104951810AF6A8978D2
2F4EAD9121CF764922DC05F1DF4D46D4704F802821FB63CB212B8DCB6D69814E
84ED98A8C5E4F82B972A1276468DDDBF513B84159BCB25BE41373C3078E1944B
C280640E0038AED87A673A5302F0413D69236B9EB0099234FF0D07419C062F5E
4BB3DAD883088ADFA2DB7DA5DF0D294B7D451C512D622B23F00ABFD6CB29B285
1CB4B12DB08D6A7FF780D952396B82BEBF38499E4609B1A92958166CF745D8BD
3FCEBC88EDA453117A2F77F111D7766BCAA7D2426B4A1231D14B65492A1C0832
4D17401E25A70B3D325CC9ACDE11CDB391762F38780C6D445944FA9F55E5BE35
BD4552A6C57481684BB21A7838B002C74999BA49AEAA8E074CEA513F1EECC1F8
8CDAE17870DD1345AB1239046D1212454CAF5F6868530F1DEDB5CC57591B6F95
770B364CF12275A1A30932BDE66207056BE9CD44B2D008EC00AC140276D756C6
AE177B54E0348C0AA567F6C73F92DFE861943526A4F740649574342858B731BD
14561453E54DC377B796B0C57703C3BE7AA0E9DFD6FE8E6CE4DAF93909C258AE
E7395FA5ED0B5A62FBAD0EA76ED36DF5E530FF1A4ADDEB9EC0D5D659C867F289
DD1E321EF5BA8208D236740DCA40034BF657F5A1E1A8F3E2252B10CA45D04DCB
13742B034FEAA5F09B454F4403584239A88A7D81F4DD70A87AFF8DFDC3074072
1CD2209BCEA5A371A51F64CDC4E0D3AD6B4E8CA983E98C9A9A1540DB54CDB4F8
7193AA6239FC0EF8D92D12F102F17D967CD8224E11681A61F03B7CF4E37B04F7
AD30D842FBFC822431520BF778ED28CABFD9F2A50669126CA6450B5FCAA6EF9E
545C7DE671D9C32E256DF456EBB493DD5DF5BDD45FFD35E0D4F5B83CDBCED6AC
39072720E971BF2CDF45A01C71DA270F309EFE5052D87CAE5169CFF6AAA9F0F9
6F9C491234F92DE42A6CF885772DE9B3E1FB87AF0C9B8B11A0C4F01B91CA6C1A
AEECEDB7C4A1BA3CA343D30A0A96336A385D72DCF5F3D19C88084A1071D66304
9921376482C696434FF5C9B36DA1E6696C3DAF37E4592D8512F67FAE8E8576CE
D200F0C4E690181AFB1DE4EC2D1CA1E24894DA3C04CD57B94025674869DADEBD
E7D778E2C59269EDD8BCF9AEEDD4BC9A97BE380EEC014CEBC4FBD06BB2327C2F
EA185806607234EEF8B605836029C3F2A84F8248892A22F88220438CDC459B23
33A3855E263388916448837380E73E7069657B1F169952D4BB5B0563FF4C5461
C94EA8AC31245036C171337825050C4F4FD7F5BC0906306E27347F3AA0F1A300
857B8B46CB65DAADE40456E28803A4CCA9D0D830B2607BDF859DEDAC1E1C700D
7724144C5ED265C9497F37EB7349237157219D7961BCDD5A1B0DA0D84C561D89
2C2823F07619659E979DCF34E9AC555D2C1893C7B2FEC5DA28E10D4708190D31
70C44F44E1ED4A0B0C97D5817568F4C99788F8AB2EE4102CF348B5CEDE1AA4C9
F0BD51A8FD800FE740BDBC694468FDEE93EFA894E079E60BFB6837EC469FF86B
D1D84566836D70287020E50AF3BBDF68CC4034EA9C519FFC0BFF35082E869D66
4A50CE68BC7A524D8A6E34A6CB62E2B3A1BE1EE825A4975C37FBEE36A59951F2
CD9CC22935479B0A8B56C19A0D6790EA3E3CFA1C03F9A200C1EE53864915BAEE
03F80D68B842380AD4C4D71E625C588D553C91BE8336481D90C282B54013008E
2A6C14C8B551BBE908FD955A3C0C518D21E987FCCD9413D853847B32CDDAE75A
3534CFE631FAF41049358525CD91C2893E03774B55B3D109DDB113BF8E6A3D45
609B06B529BDDAB235D567A0516DF02C146D9C9D666468079F61642C2D6B88C6
10461905C4C229B90CE43EBB9EE4FA0EB27FEF92AFB811CBCCFA68D39FA51B67
8BDEB1C69F2BC1FA11191A892619DA2EDDDF753DD5B55F0F2E0F0F6FC68EC54C
5FAAE05917DA8D32B35168CEB540C8A979EBC9644B8BFADDD259EDB7D432ED47
0357FF1A2A34A5CC50968598845FC169F441ECEADA0956CE8ECA40685E6EB8AA
51A6B18BBEF17E849D27DF538573132F279C2FE8FA40BD5CF7041F59634C9B62
F2E091AE0D5ED04A2A48491ED22F02570BB8345D0940E0D36F7134EBF621C30E
9B70660077E3CD882D14FBD3890D378F9291E93C574F0EE124DFD47A1C7850A0
C75ECEB6AA71C60C294B2E7BE50AB75B824FF2B766FE5ED8CC6F5AC3F24728CF
7677E62C3A13800B4882DDFD320E6A51BF7B42F1E7AE932586DE6D986F688ED9
E4127C46026CA202102E18A0CCE29FA4E73B28E69E48E03EE8337DE9C98E4EEA
D55FB8A6603C0C8EE700A22C3E223BA4CCBE856BC409AE94203BF88AFA8E928F
FDAFF502D1FE5CFD7077B5E03A768F8129DD9705A9E630766E84035863A787A2
B9FF030EDCF157CE658CE8E4A97A4418DE5624435D160208A5EB8F7E194D1150
51815BF0B8DDEE34F4A76CEB458C0CCA0525C24CCBB615EBF4CC792F14F2E41B
5D0CEBFC38A363609FAA538889590FA0F4F99A9F70B045B2BDC1CA8DA2C49FD4
C8CFFC5A6876B2AC69E452FA125EF35EB8538184B9E6981BB9E6388D40920807
1F263BA65BF804D124464DAD258AB465247CF68FF9FDA1BB1ABFF02FC69CAF55
A362330A024C9D1B85FA642D04F75A5279043E68FFB9808D172F397FB668BB04
602D95780E9CF87C8D7976BE8888F9D0935A0165570DE366407DBA2691CAAE10
F21D8ADA527CF1C3DDEAFFDECC2AE32FE6F3572129BA69D179A4EEDBFE6A6142
8ADF23DF39CD7A924800E0B4969C8472FF4E82934A799FFC1D3C8D3B4534FE5C
A8F7ED060B06F7D2E550097AA25FC73183C486D7BAC7CFBD8311066EF4D1B8E2
689055E2770238BAD2FE41F4C48ADBBD65CA34BDC83271B8BAABF42CB21C565B
11768E07F27A36A3D1F6427761AFB710C6E673DF50D332AD38B060EBD0D56593
31F221965B5133153BA773B031B78D1619C4E119B639416FF73832E0D27B9E26
4A43966BF3667DEB913DE324F6B1A06299AABC0BDF4267BFF404FBCC376CBD87
65375CB4A74A10B715FC421E6757CF3097846E8B749D3777F48609E15A402DD8
DC5622270DB1210EE19E7EAFA3E16F535C0BA97BB24923DC8DDC2993BAA42F01
925980D7FBF1E9CE06339667D535BE5C12CC1763D5BDA25682D469C7DBC9B7E9
8533AA3B9FB1629C395076AAC1CC9A852157A1A43384CB3B3A78E9434CCA3C2E
E6C2DF3A0D2F7356CA6C49C78BBC65A2A33489AC74C077285E54E2435EBBD95A
D5DB30DEE659E7B5746F83B7F9FA6A077897E51C18258BDF49D196D22B9A5999
8294D9BE859638350DA6DFB06CC2FEF9D5C0A4FB1BD9251399415363EED630B3
B7813EBE2794384BA4AFEDEE464BE3109297FCD12B08CCE364E586A0349CD812
F34611C35E35C5577C523DACCC7B26EDDA15CCD2F829E3D4C62E6DE95123C160
38558FC5973781EEB8948612BFA2AD57D33E87BB3EAA87278C1DC1485FCE4209
E1A336B89B7B3D1C71DF589660E5DE23BC4650261240C4885733B92C2B1F9366
A86505B5960AD71F7DF4D9468A9A779FE2965D4946C160E00A7CF8D694DF70DE
77282E1C523511ED00758B6EAADCC9019C534A7F27E22237F36F0F7BD67C49AF
84F58BC9F3CD1EC007372135B875DF11108E053AA1BE1966AA54EF7DAB9BB636
FAD6361344D3993B4E6EFA6A5AF8F756F744AD0AC12CE964506C07CD068D7ADB
768FA258FACA089858544E340CB49CD0D4A3B0FC712FF208936FBF22E634CBF9
112FD45D35F4453FE404C2720EB4E5B18753CB1E6EB87B0414D4CCE81A76BD4F
D59E2BA43401D025B61F418E6A44871E79D4A2C4B29F393144A1D6C6316D07DD
B169207C2863416FD18F2237FFBF0B21321962C3E684748A4524A0D7D5CF67CD
FAFDCFE973D6BED38368C61FAC3AF0F4A277F0862B25DBAF3860D124BB63F0AB
F2D02FC4A358150F478C13AAF1AD1906A8D68971BFD7255D466DEC9A83474897
1EC16C803CB2F587CB2CC01B8E06816E3B2B39948055901C1C3070A80CD53D5C
947186FD968FBFBACA3BF51D08DEA5CD837C4013B7289487E65EEF4D54597C79
9F45E5FCC317D86677E300E12E7B6B8C5523C746DC2457BD81D4C543D3EC0852
11C2C4178F756972694D4E8CD3D77306EB6B108CC8782B08438C876227DBD652
A65EA31E0C34ED1E207BFCC5F52EBFA521FA4F11AF52F106431A35B052A212C9
C1E6FEED432F540A180478DA942E3F8988F314C31CF1F64B6F5AABCB6EE69041
25FDF421235431ED9410E821021BFE184225222DB7A52C88D753D85C0F368086
5CBDFAB3020F24D4AD85FB46FB4E40A36ECC0A56165E2472D6A8EBE37E961194
F3D87FE9395AA3806B7BC84005F0484880FA7DC7C556BCB3171E0EF35FF79306
A2B8AFA085A74A6C05C3566BD569005BD78F869504485C26B8061FB9ECC78F83
82680091C265A4F54826E7B25D9B1B174C55495935D0B3F10CE22F2E75C4B51D
BF5FD4939781AF818B8E238F06047FF5786547C9A78A15A59968089229C4F216
BF630ABF3BB3AFBFF11B3822595CA86AA7AD278E86BF7263A9740AA7F14D6960
F293CB975827D14CB170F49944367063BE6F3825C8CDF3DC6D367C17FF718382
76E2D7A1AF503A78FEB56EF8CC851C55107432D1473CC3C5FD31A14BA1B2AA66
1ECCCB77BAB1E882C97B9E647A3FEBFFCDE442426AD42BBF0CB1F4352AEAF13A
BF87A46D17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23681430 16577000 1000 600 600 (CPU_time_fit.dvi)
@start /Fa 135[55 15[56 47 48 43[27 58[{}5 99.6264 /CMMI12
rf /Fb 133[43 1[51 2[54 38 38 38 1[54 49 54 81 27 2[27
3[43 54 43 1[49 11[73 4[66 2[89 9[70 9[49 49 49 49 49
3[49 49 2[33 3[38 38 40[{}30 99.6264 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black 0 TeXcolorgray -343
1204 a Fb(0)p Fa(:)p Fb(01)p 0 TeXcolorgray -295 711
a(0)p Fa(:)p Fb(1)p 0 TeXcolorgray -219 218 a(1)p 0 TeXcolorgray
-268 -276 a(10)p 0 TeXcolorgray -183 1304 a(500)p 0 TeXcolorgray
319 w(600)p 0 TeXcolorgray 318 w(700)p 0 TeXcolorgray
320 w(800)p 0 TeXcolorgray 319 w(900)p 0 TeXcolorgray
294 w(1000)-600 1500 y @beginspecial 50 @llx 50 @lly
410 @urx 302 @ury 3600 @rwi 2520 @rhi @setspecial
%%BeginDocument: CPU_time_fit-inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: CPU_time_fit.tex
%%Creator: gnuplot 5.4 patchlevel 0
%%CreationDate: Tue Oct 27 19:13:59 2020
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CPU_time_fit.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 0)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Oct 27 19:13:59 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
1176 1124 M
31 0 V
5560 0 R
-31 0 V
1176 1333 M
31 0 V
5560 0 R
-31 0 V
1176 1481 M
31 0 V
5560 0 R
-31 0 V
1176 1595 M
31 0 V
5560 0 R
-31 0 V
-5560 94 R
31 0 V
5560 0 R
-31 0 V
-5560 79 R
31 0 V
5560 0 R
-31 0 V
-5560 69 R
31 0 V
5560 0 R
-31 0 V
-5560 61 R
31 0 V
5560 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1176 1952 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 1952 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
1176 2308 M
31 0 V
5560 0 R
-31 0 V
1176 2516 M
31 0 V
5560 0 R
-31 0 V
1176 2664 M
31 0 V
5560 0 R
-31 0 V
1176 2779 M
31 0 V
5560 0 R
-31 0 V
-5560 94 R
31 0 V
5560 0 R
-31 0 V
-5560 79 R
31 0 V
5560 0 R
-31 0 V
-5560 69 R
31 0 V
5560 0 R
-31 0 V
-5560 60 R
31 0 V
5560 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1176 3135 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 3135 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
1176 3492 M
31 0 V
5560 0 R
-31 0 V
1176 3700 M
31 0 V
5560 0 R
-31 0 V
1176 3848 M
31 0 V
5560 0 R
-31 0 V
1176 3963 M
31 0 V
5560 0 R
-31 0 V
-5560 93 R
31 0 V
5560 0 R
-31 0 V
-5560 80 R
31 0 V
5560 0 R
-31 0 V
-5560 68 R
31 0 V
5560 0 R
-31 0 V
-5560 61 R
31 0 V
5560 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1176 4319 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 4319 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
0 3551 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 768 M
0 63 V
0 3488 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
2294 768 M
0 2768 V
0 720 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
2294 768 M
0 63 V
0 3488 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
3412 768 M
0 2768 V
0 720 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
3412 768 M
0 63 V
0 3488 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
4531 768 M
0 2768 V
0 720 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
4531 768 M
0 63 V
0 3488 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
5649 768 M
0 2768 V
0 720 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5649 768 M
0 63 V
0 3488 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3551 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
6767 768 M
0 63 V
0 3488 R
0 -63 V
stroke
LTb
1.000 UL
LTb
1176 4319 N
0 -3551 V
5591 0 V
0 3551 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
1320 3536 N
0 720 V
4734 0 V
0 -720 V
-4734 0 V
Z stroke
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
1.000 UP
2.000 UL
LTb
0.58 0.00 0.83 C
2904 4136 M
639 0 V
1176 2089 M
112 32 V
112 57 V
111 50 V
112 37 V
123 19 V
112 39 V
112 41 V
112 18 V
112 30 V
123 25 V
111 25 V
112 29 V
112 32 V
112 23 V
123 36 V
112 15 V
111 26 V
112 -2 V
112 53 V
123 311 V
112 -267 V
112 13 V
112 34 V
111 7 V
123 33 V
112 19 V
112 18 V
112 18 V
112 20 V
123 21 V
112 37 V
111 6 V
112 23 V
112 14 V
123 17 V
112 26 V
112 71 V
111 -38 V
112 16 V
123 21 V
112 17 V
112 197 V
112 -170 V
112 15 V
123 25 V
111 9 V
112 16 V
112 122 V
123 -87 V
1176 2089 Pls
1288 2121 Pls
1400 2178 Pls
1511 2228 Pls
1623 2265 Pls
1746 2284 Pls
1858 2323 Pls
1970 2364 Pls
2082 2382 Pls
2194 2412 Pls
2317 2437 Pls
2428 2462 Pls
2540 2491 Pls
2652 2523 Pls
2764 2546 Pls
2887 2582 Pls
2999 2597 Pls
3110 2623 Pls
3222 2621 Pls
3334 2674 Pls
3457 2985 Pls
3569 2718 Pls
3681 2731 Pls
3793 2765 Pls
3904 2772 Pls
4027 2805 Pls
4139 2824 Pls
4251 2842 Pls
4363 2860 Pls
4475 2880 Pls
4598 2901 Pls
4710 2938 Pls
4821 2944 Pls
4933 2967 Pls
5045 2981 Pls
5168 2998 Pls
5280 3024 Pls
5392 3095 Pls
5503 3057 Pls
5615 3073 Pls
5738 3094 Pls
5850 3111 Pls
5962 3308 Pls
6074 3138 Pls
6186 3153 Pls
6309 3178 Pls
6420 3187 Pls
6532 3203 Pls
6644 3325 Pls
6767 3238 Pls
3223 4136 Pls
LTw
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.62 0.45 C
LCb setrgbcolor
1.000 UP
2.000 UL
LTb
0.00 0.62 0.45 C
2904 3896 M
639 0 V
1176 1860 M
112 -4 V
112 19 V
111 55 V
112 -2 V
123 53 V
112 30 V
112 55 V
112 -3 V
112 44 V
123 13 V
111 83 V
112 -10 V
112 33 V
112 32 V
123 22 V
112 36 V
111 40 V
112 10 V
112 30 V
123 28 V
112 6 V
112 33 V
112 29 V
111 45 V
123 27 V
112 -9 V
112 29 V
112 19 V
112 5 V
123 41 V
112 22 V
111 3 V
112 12 V
112 39 V
123 16 V
112 62 V
112 104 V
111 -112 V
112 25 V
123 11 V
112 9 V
112 21 V
112 15 V
112 22 V
123 15 V
111 13 V
112 10 V
112 21 V
123 27 V
1176 1860 Crs
1288 1856 Crs
1400 1875 Crs
1511 1930 Crs
1623 1928 Crs
1746 1981 Crs
1858 2011 Crs
1970 2066 Crs
2082 2063 Crs
2194 2107 Crs
2317 2120 Crs
2428 2203 Crs
2540 2193 Crs
2652 2226 Crs
2764 2258 Crs
2887 2280 Crs
2999 2316 Crs
3110 2356 Crs
3222 2366 Crs
3334 2396 Crs
3457 2424 Crs
3569 2430 Crs
3681 2463 Crs
3793 2492 Crs
3904 2537 Crs
4027 2564 Crs
4139 2555 Crs
4251 2584 Crs
4363 2603 Crs
4475 2608 Crs
4598 2649 Crs
4710 2671 Crs
4821 2674 Crs
4933 2686 Crs
5045 2725 Crs
5168 2741 Crs
5280 2803 Crs
5392 2907 Crs
5503 2795 Crs
5615 2820 Crs
5738 2831 Crs
5850 2840 Crs
5962 2861 Crs
6074 2876 Crs
6186 2898 Crs
6309 2913 Crs
6420 2926 Crs
6532 2936 Crs
6644 2957 Crs
6767 2984 Crs
3223 3896 Crs
LTw
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.34 0.71 0.91 C
LCb setrgbcolor
1.000 UP
2.000 UL
LTb
0.34 0.71 0.91 C
2904 3656 M
639 0 V
1176 957 M
112 89 V
112 36 V
111 66 V
112 -34 V
123 101 V
112 51 V
112 11 V
112 24 V
112 29 V
123 8 V
111 -53 V
112 79 V
112 -36 V
112 104 V
123 21 V
112 39 V
111 -1 V
112 43 V
112 0 V
123 -27 V
112 71 V
112 -49 V
112 79 V
111 -30 V
123 77 V
112 19 V
112 38 V
112 15 V
112 21 V
123 23 V
112 -54 V
111 64 V
112 -5 V
112 52 V
123 31 V
112 101 V
112 -57 V
111 16 V
112 7 V
123 -53 V
112 69 V
112 -35 V
112 61 V
112 -23 V
123 87 V
111 4 V
112 24 V
112 1 V
123 -18 V
1176 957 Star
1288 1046 Star
1400 1082 Star
1511 1148 Star
1623 1114 Star
1746 1215 Star
1858 1266 Star
1970 1277 Star
2082 1301 Star
2194 1330 Star
2317 1338 Star
2428 1285 Star
2540 1364 Star
2652 1328 Star
2764 1432 Star
2887 1453 Star
2999 1492 Star
3110 1491 Star
3222 1534 Star
3334 1534 Star
3457 1507 Star
3569 1578 Star
3681 1529 Star
3793 1608 Star
3904 1578 Star
4027 1655 Star
4139 1674 Star
4251 1712 Star
4363 1727 Star
4475 1748 Star
4598 1771 Star
4710 1717 Star
4821 1781 Star
4933 1776 Star
5045 1828 Star
5168 1859 Star
5280 1960 Star
5392 1903 Star
5503 1919 Star
5615 1926 Star
5738 1873 Star
5850 1942 Star
5962 1907 Star
6074 1968 Star
6186 1945 Star
6309 2032 Star
6420 2036 Star
6532 2060 Star
6644 2061 Star
6767 2043 Star
3223 3656 Star
LTw
% End plot #3
% Begin plot #4
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.90 0.62 0.00 C
LCb setrgbcolor
2.000 UL
LTb
0.90 0.62 0.00 C
5271 4136 M
639 0 V
1176 2067 M
56 28 V
57 26 V
56 24 V
57 24 V
56 23 V
57 21 V
56 21 V
57 21 V
56 19 V
57 19 V
56 18 V
57 18 V
56 17 V
57 17 V
56 16 V
57 16 V
56 16 V
57 15 V
56 15 V
56 15 V
57 14 V
56 14 V
57 14 V
56 14 V
57 13 V
56 13 V
57 13 V
56 13 V
57 13 V
56 12 V
57 12 V
56 12 V
57 12 V
56 12 V
57 12 V
56 12 V
57 11 V
56 11 V
57 12 V
56 11 V
56 11 V
57 11 V
56 11 V
57 11 V
56 10 V
57 11 V
56 11 V
57 10 V
56 11 V
57 10 V
56 10 V
57 11 V
56 10 V
57 10 V
56 10 V
57 10 V
56 10 V
57 10 V
56 10 V
56 10 V
57 10 V
56 10 V
57 10 V
56 9 V
57 10 V
56 10 V
57 9 V
56 10 V
57 9 V
56 10 V
57 9 V
56 10 V
57 9 V
56 9 V
57 10 V
56 9 V
57 9 V
56 9 V
57 10 V
56 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 8 V
57 9 V
56 9 V
57 9 V
56 8 V
57 9 V
56 9 V
stroke
LTw
% End plot #4
% Begin plot #5
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.94 0.89 0.26 C
LCb setrgbcolor
2.000 UL
LTb
0.94 0.89 0.26 C
5271 3896 M
639 0 V
1176 1855 M
56 10 V
57 11 V
56 11 V
57 12 V
56 12 V
57 13 V
56 13 V
57 14 V
56 14 V
57 14 V
56 15 V
57 14 V
56 15 V
57 15 V
56 15 V
57 16 V
56 15 V
57 15 V
56 15 V
56 16 V
57 15 V
56 15 V
57 15 V
56 16 V
57 15 V
56 15 V
57 14 V
56 15 V
57 15 V
56 14 V
57 15 V
56 14 V
57 14 V
56 14 V
57 14 V
56 14 V
57 13 V
56 14 V
57 13 V
56 13 V
56 13 V
57 13 V
56 13 V
57 12 V
56 13 V
57 12 V
56 12 V
57 12 V
56 12 V
57 12 V
56 11 V
57 12 V
56 11 V
57 11 V
56 11 V
57 11 V
56 11 V
57 11 V
56 10 V
56 11 V
57 10 V
56 10 V
57 10 V
56 10 V
57 10 V
56 9 V
57 10 V
56 9 V
57 10 V
56 9 V
57 9 V
56 9 V
57 9 V
56 8 V
57 9 V
56 9 V
57 8 V
56 8 V
57 9 V
56 8 V
56 8 V
57 8 V
56 8 V
57 7 V
56 8 V
57 8 V
56 7 V
57 8 V
56 7 V
57 7 V
56 7 V
57 7 V
56 7 V
57 7 V
56 7 V
57 7 V
56 7 V
57 6 V
56 7 V
stroke
LTw
% End plot #5
% Begin plot #6
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.70 C
LCb setrgbcolor
2.000 UL
LTb
0.00 0.45 0.70 C
5271 3656 M
639 0 V
1176 1045 M
56 14 V
57 14 V
56 13 V
57 14 V
56 14 V
57 14 V
56 13 V
57 14 V
56 14 V
57 13 V
56 13 V
57 14 V
56 13 V
57 13 V
56 13 V
57 13 V
56 13 V
57 13 V
56 13 V
56 13 V
57 12 V
56 13 V
57 12 V
56 13 V
57 12 V
56 12 V
57 12 V
56 12 V
57 12 V
56 12 V
57 12 V
56 11 V
57 12 V
56 11 V
57 11 V
56 12 V
57 11 V
56 11 V
57 11 V
56 11 V
56 11 V
57 10 V
56 11 V
57 11 V
56 10 V
57 10 V
56 11 V
57 10 V
56 10 V
57 10 V
56 10 V
57 10 V
56 10 V
57 10 V
56 9 V
57 10 V
56 10 V
57 9 V
56 9 V
56 10 V
57 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 9 V
57 9 V
56 8 V
57 9 V
56 9 V
57 8 V
56 9 V
57 8 V
56 8 V
57 8 V
56 9 V
57 8 V
56 8 V
56 8 V
57 8 V
56 8 V
57 8 V
56 7 V
57 8 V
56 8 V
57 8 V
56 7 V
57 8 V
56 7 V
57 8 V
56 7 V
57 8 V
56 7 V
57 7 V
56 7 V
57 8 V
56 7 V
stroke
LTw
% End plot #6
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UL
LTb
1176 4319 N
0 -3551 V
5591 0 V
0 3551 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray -505 440 a
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 -505 440 a -795
464 a Fb(CPU)34 b(time)f(\(s\))-505 440 y
 currentpoint grestore moveto
 -505 440 a
678 1454 a Fb(Matrix)g(dimension)p 0 TeXcolorgray -41
-199 a(not)g(optimized)p 0 TeXcolorgray 133 -99 a(optimized)p
0 TeXcolorgray 222 1 a(matm)m(ul)p 0 TeXcolorgray 1346
-199 a Fa(f)11 b Fb(\()p Fa(x)p Fb(\))p 0 TeXcolorgray
1355 -99 a Fa(g)t Fb(\()p Fa(x)p Fb(\))p 0 TeXcolorgray
1349 1 a Fa(h)p Fb(\()p Fa(x)p Fb(\))p 0 TeXcolorgray
311 -426 a(Matrix)33 b(m)m(ultiplication)h(-)e(CPU)i(times)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
